@startuml

title Class Diagram of <b>com.ships.random_ship_placement</b> package\n

    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.AvailableIndexesHandler {
          {static} - ADDITIONAL_SPACE_TO_REMOVE : int
          {static} - CORNER_CASE_OF_ALGORITHM : int
          {static} - HEIGHT_OF_HORIZONTAL_BLOCK : int
          {static} - WIDTH_OF_VERTICAL_BLOCK : int
          - availableCellIndexes : Set<Integer>
          - random : Random
          ~ AvailableIndexesHandler()
          ~ drawNumberFromGrid()
          ~ hasCellIndex()
          ~ removeCellsAroundShipPlacedHorizontal()
          ~ removeCellsAroundShipPlacedVertical()
          ~ reset()
      }
    }


    namespace com.ships.random_ship_placement {
      enum Direction {
        HORIZONTAL
        VERTICAL
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.NoCoordinatesFoundException {
          ~ NoCoordinatesFoundException()
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.Player {
          - name : String
          + Player()
          + equals()
          + getName()
          + hashCode()
          + toString()
      }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.PlayerWithShipMap {
          - shipList : List<Ship>
          + PlayerWithShipMap()
          + equals()
          + getPlayer()
          + getShipList()
          + hashCode()
          + toString()
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.RandomShipPlacement {
          ~ RandomShipPlacement()
          ~ createShip()
          ~ reset()
          - removeCellsOnWhichShipCanNotBePlaced()
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.RandomShipPlacementController {
          {static} - GAME_SERVICE_MAPS_URL : String
          + RandomShipPlacementController()
          ~ createNewSetOfMapsForGivenPlayer()
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.Ship {
          + isVertical : boolean
          + shipCellIndexes : List<Integer>
          + Ship()
          + getShipCellIndexes()
          + isVertical()
          + toString()
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.ShipCoordinates {
          ~ begin : int
          ~ end : int
          + ShipCoordinates()
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.ShipCoordinatesFinder {
          ~ ShipCoordinatesFinder()
          ~ calculateShipCoordinates()
          - areCellIndexesInTheSameRow()
          - createHorizontalRangeOfIntegers()
          - createVerticalRangeOfIntegers()
          - findHorizontalCoordinatesOfShipLongerThanOneMast()
          - findVerticalCoordinatesOfShipLongerThanOneMast()
      }
    }


    namespace com.ships.random_ship_placement {
      class com.ships.random_ship_placement.ShipGenerator {
          - mastAmounts : List<Integer>
          - random : Random
          - ships : List<Ship>
          + generate()
          ~ ShipGenerator()
          - addShip()
          - drawDirection()
          - reset()
      }
    }


  com.ships.random_ship_placement.PlayerWithShipMap o-- com.ships.random_ship_placement.Player : player
  com.ships.random_ship_placement.RandomShipPlacement o-- com.ships.random_ship_placement.AvailableIndexesHandler : availableIndexesHandler
  com.ships.random_ship_placement.RandomShipPlacement o-- com.ships.random_ship_placement.ShipCoordinatesFinder : shipCoordinatesFinder
  com.ships.random_ship_placement.RandomShipPlacementController o-- com.ships.random_ship_placement.ShipGenerator : shipGenerator
  com.ships.random_ship_placement.ShipCoordinatesFinder o-- com.ships.random_ship_placement.AvailableIndexesHandler : availableIndexesHandler
  com.ships.random_ship_placement.ShipGenerator o-- com.ships.random_ship_placement.RandomShipPlacement : randomShipPlacement


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
